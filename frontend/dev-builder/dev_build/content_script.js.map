{"version":3,"file":"content_script.js","mappings":";;;;;;;;;;;;;;AAAA;AACA,iEAAe;AACf;AACA,CAAC;;;;;;;;;;;;;;ACHD,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACjBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;AChCS;AACN;AACsB;;AAEjD;AACA,MAAM,6DAAiB;AACvB,WAAW,6DAAiB;AAC5B;;AAEA;AACA,iDAAiD,+CAAG,KAAK;;AAEzD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,8DAAe;AACxB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;AC5Bc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;ACNW;AACwB;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,wCAAwC,QAAQ;AACvD,kBAAkB,gDAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uEAAkB,GAAG,oCAAoC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;AC1DO,8BAA8B,aAAa;AAClD,YAAY,WAAW;AACvB;AACA,+DAA+D,GAAG;AAClE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA,+CAA+C,EAAE;AACjD;;;;;;;;;;;;;;;;;;;ACJwC;AACuC;AACjC;AACY;AACnD;AACP;AACA,qEAAqE;AACrE,eAAe,gDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,uEAAkB,GAAG,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD,4BAA4B,6DAA6D;AACzF;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,+CAA+C;AAC/C,oDAAoD;AACpD,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2DAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2DAAY;AAC/C;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iCAAiC,2FAA4B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC,kDAAkD;AACtF;AACA;AACA,kCAAkC;AAClC;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,uDAAuD,iBAAiB;AACxE;AACA;AACA,KAAK;AACL,iDAAiD,iBAAiB;AAClE;;;;;;;;;;;;;;;ACpKO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA,KAAK;AACL;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN8C;AACiB;AACT;AACwB;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAsB;AAC9B;AACA;AACA,QAAQ,mEAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,QAAQ,2FAA4B,GAAG,gBAAgB;AACvD;AACA;AACA,QAAQ,2DAAY;AACpB","sources":["webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/native.js","webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/regex.js","webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/rng.js","webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/stringify.js","webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/v4.js","webpack://dev-builder/../content/node_modules/uuid/dist/esm-browser/validate.js","webpack://dev-builder/../content/src/initIFrameProviderConnection.ts","webpack://dev-builder/../content/src/injectInpageScript.ts","webpack://dev-builder/../content/src/notReachable.ts","webpack://dev-builder/../content/src/provider-connection.ts","webpack://dev-builder/../content/src/trezor-popup.ts","webpack://dev-builder/webpack/bootstrap","webpack://dev-builder/webpack/runtime/define property getters","webpack://dev-builder/webpack/runtime/hasOwnProperty shorthand","webpack://dev-builder/webpack/runtime/make namespace object","webpack://dev-builder/../content/src/index.ts"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { v4 as uuid } from 'uuid';\nimport { injectInpageScript } from './injectInpageScript';\nexport const parseIFrameToParentHandshake = (msg) => {\n    if (msg &&\n        typeof msg === 'object' &&\n        'type' in msg &&\n        typeof msg.type === 'string' &&\n        msg.type === 'iframe-to-parent-handshake' &&\n        'id' in msg &&\n        typeof msg.id === 'string') {\n        return {\n            type: 'iframe-to-parent-handshake',\n            id: msg.id,\n        };\n    }\n    return null;\n};\nconst parseParentToIFrameHandshake = (msg) => {\n    if (msg &&\n        typeof msg === 'object' &&\n        'type' in msg &&\n        typeof msg.type === 'string' &&\n        msg.type === 'parent-to-iframe-handshake' &&\n        'parentId' in msg &&\n        typeof msg.parentId === 'string' &&\n        'childId' in msg &&\n        typeof msg.childId === 'string') {\n        return {\n            type: 'parent-to-iframe-handshake',\n            childId: msg.childId,\n            parentId: msg.parentId,\n        };\n    }\n    return null;\n};\nconst findRootWindow = (current) => {\n    if (current.parent === current) {\n        return current;\n    }\n    return findRootWindow(current.parent);\n};\nexport const initIFrameProviderConnection = ({ window }) => {\n    const auxId = uuid();\n    const rootWindow = findRootWindow(window);\n    const initListener = (message) => {\n        if (message.origin === rootWindow.origin) {\n            const parentMessage = parseParentToIFrameHandshake(message.data);\n            if (parentMessage && parentMessage.childId === auxId) {\n                window.removeEventListener('message', initListener);\n                injectInpageScript({ window, id: parentMessage.parentId });\n            }\n        }\n    };\n    window.addEventListener('message', initListener);\n    rootWindow.postMessage({\n        type: 'iframe-to-parent-handshake',\n        id: auxId,\n    });\n};\n","export const injectInpageScript = ({ id, window, }) => {\n    const { document } = window;\n    const script = document.createElement('script');\n    script.src = chrome.runtime.getURL(`inpage.js?instanceId=${id}&iframe=true`);\n    const elementToInsertTo = document.head || document.documentElement;\n    elementToInsertTo.prepend(script);\n    elementToInsertTo.removeChild(script);\n    return script;\n};\n","export const notReachable = (_) => {\n    // eslint-disable-next-line no-console\n    console.error(_);\n    throw new Error(`should never be reached ${_}`);\n};\n","import { v4 as generateId } from 'uuid';\nimport { parseIFrameToParentHandshake, } from './initIFrameProviderConnection';\nimport { notReachable } from './notReachable';\nimport { injectInpageScript } from './injectInpageScript';\nexport const initProviderConnection = () => {\n    const LS_KEY = 'zeal_widget';\n    const savedState = JSON.parse(localStorage.getItem(LS_KEY) || '{}');\n    const id = generateId();\n    let port = null;\n    let messageBufferUntilReady = [];\n    const bcm = new BroadcastChannel(id);\n    // TODO :: re define types to support generic\n    bcm.addEventListener('message', (e) => {\n        if (e.origin === window.location.origin) {\n            const message = e.data;\n            if (port) {\n                port.postMessage(message);\n            }\n            else {\n                messageBufferUntilReady.push(message);\n            }\n        }\n    });\n    injectInpageScript({ id, window });\n    const iframe = document.createElement('iframe');\n    const query = new URLSearchParams();\n    query.append('dAppUrl', window.location.hostname);\n    query.append('instanceId', id);\n    query.append('type', 'zwidget');\n    iframe.allow = 'clipboard-write; hid';\n    iframe.src = chrome.runtime.getURL(`index.html?${query.toString()}`);\n    iframe.width = '0px';\n    iframe.height = '0px';\n    iframe.setAttribute('style', `display: block !important;\n     z-index: 10000000000 !important;\n     border: none !important;\n     position: fixed !important;\n     box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px !important;\n     border-radius: 12px !important;\n     pointer-events: auto !important;\n`.trim());\n    iframe.style.width = '0px';\n    iframe.style.height = '0px';\n    iframe.style.top = `${savedState.top || 100}px`;\n    iframe.style.right = `${savedState.right ? window.innerWidth - savedState.right : 24}px`;\n    window.addEventListener('message', (message) => {\n        if (message.source === iframe.contentWindow) {\n            if (message.data?.type === 'ready') {\n                port = chrome.runtime.connect(undefined, { name: id });\n                messageBufferUntilReady.forEach((msg) => {\n                    port.postMessage(msg);\n                });\n                messageBufferUntilReady = [];\n                port.onMessage.addListener((msg) => {\n                    switch (msg.type) {\n                        case 'disconnect':\n                        case 'account_change':\n                        case 'rpc_response':\n                        case 'network_change':\n                        case 'init_provider':\n                            bcm.postMessage(msg);\n                            break;\n                        case 'drag':\n                            iframe.style.top = `${parseInt(iframe.style.top, 10) +\n                                msg.movement.y}px`;\n                            iframe.style.right = `${parseInt(iframe.style.right, 10) -\n                                msg.movement.x}px`;\n                            keepIframeInView(iframe);\n                            localStorage.setItem(LS_KEY, JSON.stringify(iframe.getBoundingClientRect()));\n                            break;\n                        case 'change_iframe_size':\n                            let size = {\n                                width: iframe.width,\n                                height: iframe.height,\n                            };\n                            switch (msg.size) {\n                                case 'icon':\n                                    size.width = '36px';\n                                    size.height = '36px';\n                                    break;\n                                case 'small':\n                                    size.width = '360px';\n                                    size.height = '200px';\n                                    break;\n                                case 'large':\n                                    size.width = '360px';\n                                    size.height = '600px';\n                                    break;\n                                /* istanbul ignore next */\n                                default:\n                                    return notReachable(msg.size);\n                            }\n                            iframe.width = size.width;\n                            iframe.height = size.height;\n                            iframe.style.width = size.width;\n                            iframe.style.height = size.height;\n                            keepIframeInView(iframe);\n                            break;\n                        /* istanbul ignore next */\n                        default:\n                            return notReachable(msg);\n                    }\n                });\n            }\n        }\n        else {\n            const parentMessge = parseIFrameToParentHandshake(message.data);\n            if (parentMessge) {\n                const source = message.source;\n                const childId = parentMessge.id;\n                if (source) {\n                    source.postMessage({\n                        type: 'parent-to-iframe-handshake',\n                        childId,\n                        parentId: id,\n                    });\n                }\n            }\n        }\n    });\n    const keepIframeInView = (iframe) => {\n        const rect = iframe.getBoundingClientRect();\n        if (rect.left < 0) {\n            iframe.style.right = `${parseInt(iframe.style.right, 10) + rect.left - 20}px`;\n        }\n        if (rect.bottom >= window.innerHeight) {\n            iframe.style.top = `${parseInt(iframe.style.top, 10) -\n                (rect.bottom - window.innerHeight) -\n                20}px`;\n        }\n        if (rect.top < 0) {\n            iframe.style.top = '20px';\n        }\n        if (rect.right >= window.innerWidth) {\n            iframe.style.right = '20px';\n        }\n    };\n    const observer = new MutationObserver(function () {\n        // While we need to insert script asap to compete for window.ethereum object\n        // we want to insert iframe to body to have proper rendering\n        if (document.body) {\n            // It exists now\n            document.body.append(iframe);\n            keepIframeInView(iframe);\n            observer.disconnect();\n            // Create new observer for guarding\n            if (window.location.href.match(/quickswap.exchange/gi)) {\n                const guardObserver = new MutationObserver((mutations) => {\n                    const added = mutations\n                        .map((mutation) => Array.from(mutation.addedNodes))\n                        .flat();\n                    const quickSwapModal = added\n                        .filter((item) => item instanceof HTMLDivElement)\n                        .map((div) => div.querySelector('.MuiBox-root[tabindex=\"-1\"]'))\n                        .find(Boolean);\n                    if (quickSwapModal) {\n                        quickSwapModal.removeAttribute('tabindex');\n                    }\n                });\n                guardObserver.observe(document.body, { childList: true });\n            }\n        }\n    });\n    observer.observe(document.documentElement, { childList: true });\n};\n","export const initTrezorConnection = () => {\n    let trPort = chrome.runtime.connect(undefined, {\n        name: 'trezor-connect',\n    });\n    trPort.onMessage.addListener((message) => {\n        window.postMessage(message, window.location.origin);\n    });\n    trPort.onDisconnect.addListener(() => {\n        trPort = null;\n    });\n    window.addEventListener('message', (event) => {\n        if (trPort && event.source === window && event.data) {\n            trPort.postMessage({ data: event.data });\n        }\n    });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { notReachable } from './notReachable';\nimport { initProviderConnection } from './provider-connection';\nimport { initTrezorConnection } from './trezor-popup';\nimport { initIFrameProviderConnection } from './initIFrameProviderConnection';\nconst calculateScriptType = (url) => {\n    const urlObject = new URL(url);\n    const ignoredHosts = new Set(['www.meiamaratonadoporto.com']);\n    if (ignoredHosts.has(urlObject.host)) {\n        return { type: 'ignored' };\n    }\n    if (!!url.match(/^https:\\/\\/connect\\.trezor\\.io\\/\\d\\/popup\\.html/gim)) {\n        return { type: 'trezor-popup' };\n    }\n    else if (window.parent !== window) {\n        return { type: 'iframe-content-script' };\n    }\n    else {\n        return { type: 'generic' };\n    }\n};\nconst scriptType = calculateScriptType(window.location.href);\nswitch (scriptType.type) {\n    case 'generic':\n        initProviderConnection();\n        break;\n    case 'trezor-popup':\n        initTrezorConnection();\n        break;\n    case 'ignored':\n        // if site is ignored - we do nothing\n        break;\n    case 'iframe-content-script':\n        initIFrameProviderConnection({ window: window });\n        break;\n    default:\n        notReachable(scriptType);\n}\n"],"names":[],"sourceRoot":""}